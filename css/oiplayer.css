/**
 * @author   AndrÃ© van Toly
 * @since    May 2009
 * @name     Stylesheet, less version, to style OIPlayer and its controls
 */
.oiplayer {
  position: relative;
  margin: 0;
  padding: 0;
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
}
.oiplayer.fullscreen {
  position: fixed;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  overflow: hidden;
  z-index: 1000;
  width: 100%;
  height: 100%;
  background-color: #000;
}
.oiplayer.fullscreen .player {
  width: 100%;
  height: 100%;
  z-index: 1001;
}
.oiplayer.fullscreen .player video,
.oiplayer.fullscreen .player object,
.oiplayer.fullscreen .player embed {
  z-index: 1002;
}
.oiplayer video,
.oiplayer object,
.oiplayer embed {
  display: block;
  margin: 0;
  padding: 0;
  border: 0;
}
.oiplayer audio {
  position: absolute;
  bottom: 0;
  left: 0;
  display: block;
  margin: 0;
  padding: 0;
  width: 100%;
  /* not sure about this */
}
.oiplayer .player {
  margin: 0;
  padding: 0;
  z-index: 10;
}
.audio .oiplayer .player {
  bottom: 0;
}
.oiplayer .preview {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 11;
  cursor: pointer;
}
.oiplayer .preview.video {
  background: url("images/preview_video.png") left top repeat;
}
.oiplayer .preview.audio {
  background: url("images/preview_audio.png") left top repeat;
}
.oiplayer .oipcontrols {
  height: 30px;
  margin: 0;
  max-width: 640px;
  color: #555;
  z-index: 19;
  background-color: transparent;
  background-image: url("images/bg-whitish.png");
  position: absolute;
  bottom: 0;
  left: 0;
  /* matches the slider when the volume button is hovered */
  /* the bar filling up to the thumb position */
  /* the container for the thumb, shorter from the overall
           slider width by the width of the thumb so that we can
           use percentages to position the thumb */
  /* the actual thumb element */
  /* hover state for the thumb */
  /* ### progress bar & position ### */
}
.fullscreen .oiplayer .oipcontrols {
  z-index: 1003;
  margin: 0 auto;
}
.oiplayer .oipcontrols.top {
  margin: auto auto 10px auto;
  border-radius: 2px;
  box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.5);
}
.oiplayer .oipcontrols.audio .progress {
  right: 100px;
}
.oiplayer .oipcontrols.audio .timeleft {
  right: 30px;
}
.oiplayer .oipcontrols > div {
  position: absolute;
  margin: 2px 0 0 0;
  padding: 0;
  height: 28px;
}
.oiplayer .oipcontrols .play {
  position: absolute;
  left: 6px;
  width: 21px;
}
.oiplayer .oipcontrols .play a {
  width: 21px;
  float: left;
  background-image: url("images/controls-play.png");
  padding: 25px 0 0 0;
  overflow: hidden;
  height: 0 !important;
  height: 25px;
  /* for IE5/Win */
}
.oiplayer .oipcontrols .pause {
  position: absolute;
  width: 21px;
}
.oiplayer .oipcontrols .pause a {
  width: 21px;
  float: left;
  background-image: url("images/controls-pause.png");
  padding: 25px 0 0 0;
  overflow: hidden;
  height: 0 !important;
  height: 25px;
  /* for IE5/Win */
}
.oiplayer .oipcontrols .time {
  position: absolute;
  width: 50px;
  left: 25px;
  font-size: 10px;
  font-family: Monaco, "Courier New", monospaced;
  line-height: 26px;
  text-align: right;
  /* 83 */
}
.oiplayer .oipcontrols .timeleft {
  position: absolute;
  width: 55px;
  right: 54px;
  font-size: 10px;
  font-family: Monaco, "Courier New", monospaced;
  line-height: 26px;
  text-align: left;
  /* 115 */
}
.audio .oiplayer .oipcontrols .timeleft {
  right: 30px;
}
.oiplayer .oipcontrols .screen {
  position: absolute;
  width: 23px;
  right: 33px;
  /* 54 */
}
.ios .oiplayer .oipcontrols .screen {
  right: 6px;
}
.oiplayer .oipcontrols .screen a {
  float: right;
  width: 23px;
  background-image: url("images/controls-fullscreen.png");
  padding: 25px 0 0 0;
  overflow: hidden;
  height: 0 !important;
  height: 25px;
  /* for IE5/Win */
}
.oiplayer .oipcontrols .sound {
  position: absolute;
  width: 21px;
  right: 6px;
}
.oiplayer .oipcontrols .sound a {
  width: 21px;
  float: left;
  background-image: url("images/controls-soundon.png");
  padding: 25px 0 0 0;
  overflow: hidden;
  height: 0 !important;
  height: 25px;
  /* for IE5/Win */
}
.oiplayer .oipcontrols .sound.muted a {
  background-image: url("images/controls-soundoff.png");
}
.oiplayer .oipcontrols .sound > .volume {
  width: 12px;
  height: 60px;
  position: relative;
  top: -6px;
  left: 6px;
  /* container for the volume slider */
}
.oiplayer .oipcontrols .sound > .volume .slider {
  width: 100%;
  height: 100%;
  background-color: #808080;
  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.8);
  /* by default does not register for pointer events
                     so that only the VOL label acts as a hover trigger */
  pointer-events: none;
  /* volume slider is invisible by default */
  opacity: 0;
  transform: translateY(0);
  /* set up the opacity transition */
  transition-property: opacity, transform;
  transition-duration: 0.25s;
}
.oiplayer .oipcontrols div.sound:hover > div.volume .slider,
.oiplayer .oipcontrols div.sound a:hover > div.volume .slider,
.oiplayer .oipcontrols .volume:hover .slider {
  /* turn pointer events back on so that we now only
             hide the slider when we exit the VOL label or the slider */
  pointer-events: auto;
  /* show the slider */
  opacity: 1;
  transform: translateY(-50px);
}
.oiplayer .oipcontrols .slider .fill {
  height: 100%;
  background-color: #333;
}
.oiplayer .oipcontrols .slider .thumb > div {
  position: absolute;
  top: 0;
  margin-top: -6px;
  left: -6px;
  width: 24px;
  height: 12px;
  background-color: #CCCCCC;
  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.8);
}
.oiplayer .oipcontrols .slider .thumb > div:hover {
  background-color: #EAEAEA;
}
.oiplayer .oipcontrols .progress {
  position: absolute;
  left: 83px;
  /* 10px margin left and right */
  right: 122px;
}
.oiplayer .oipcontrols .progress .oiprogress {
  background: url("images/slider11-long.png") left -50px no-repeat;
  height: 25px;
  left: 0;
  right: 0;
  pointer-events: none;
}
.audio .oiplayer .oipcontrols .progress {
  right: 100px;
}
.oiplayer .oipcontrols .bar {
  position: absolute;
  height: 25px;
  left: 6px;
  top: 0;
}
.oiplayer .oipcontrols .back {
  position: absolute;
  width: 100%;
  background: url("images/slider11-long.png") right 0 no-repeat;
  margin-right: 6px;
  pointer-events: auto;
}
.oiplayer .oipcontrols .loaded {
  position: absolute;
  background: url("images/slider11-long.png") right -25px no-repeat;
  margin-right: 6px;
  pointer-events: auto;
}
.oiplayer .oipcontrols .played {
  position: absolute;
  background: url("images/slider11-long.png") right -50px no-repeat;
  pointer-events: none;
}
.oiplayer .oipcontrols .oiprogress-container {
  position: absolute;
  left: 0;
  right: 6px;
}
.oiplayer .oipcontrols .oiprogress-container .oiprogress-push {
  position: absolute;
  width: 11px;
  height: 25px;
  pointer-events: auto;
}
.oiplayer .oipcontrols .oiprogress-container .oiprogress-push .pos {
  position: absolute;
  width: 11px;
  height: 25px;
}
.oiplayer .oipcontrols .oiprogress-container .oiprogress-push .pos a {
  background: url("images/slider11-pos.png") left -75px no-repeat;
  width: 13px;
  float: left;
  padding: 25px 0 0 0;
  overflow: hidden;
  height: 0 !important;
  height: 25px;
  /* for IE5/Win */
}
.oiplayer .oipcontrols.dark {
  color: #efefef;
  background-color: transparent;
  background-image: url("images/bg-blackish.png");
}
.oiplayer .oipcontrols.dark a {
  background-position: 0 -50px;
}
.oiplayer .oipcontrols.dark a:hover {
  background-position: 0 0;
}
.oiplayer .oipcontrols.dark .progress.changed div.oiprogress {
  background: url("images/slider11-long.png") left -50px no-repeat;
}
.oiplayer .oipcontrols.dark .back {
  background: url("images/slider11-long.png") right 0 no-repeat;
}
.oiplayer .oipcontrols.dark .loaded {
  background: url("images/slider11-long.png") right -25px no-repeat;
}
.oiplayer .oipcontrols.dark .played {
  background: url("images/slider11-long.png") right -50px no-repeat;
}
.oiplayer .oipcontrols.ios {
  position: relative;
  margin: 0;
  padding: 0;
  /* on iOS sound (iPad) or screen (iPhone) are hidden */
  /* ios: bit different color scheme */
}
.oiplayer .oipcontrols.ios .progress {
  right: 100px;
}
.oiplayer .oipcontrols.ios .timeleft {
  right: 30px;
}
.oiplayer .oipcontrols.ios .screen {
  right: 6px;
}
.oiplayer .oipcontrols.ios .back {
  background: url("images/slider11-long.png") right -25px no-repeat;
}
.oiplayer .oipcontrols.ios .loaded {
  background: url("images/slider11-long.png") right -50px no-repeat;
}
.oiplayer .oipcontrols.ios .player {
  background: url("images/slider11-long.png") right -75px no-repeat;
}
.oiplayer .oipcontrols.ios .dark .back {
  background: url("images/slider11-long.png") right 0 no-repeat;
}
.oiplayer .oipcontrols.ios .dark .loaded {
  background: url("images/slider11-long.png") right -25px no-repeat;
}
.oiplayer .oipcontrols.ios .dark .played {
  background: url("images/slider11-long.png") right -50px no-repeat;
}
.oiplayer.inavailable.video {
  background: url("images/preview_video.png") left top repeat;
}
.oiplayer.inavailable.audio {
  background: url("images/preview_audio.png") left top repeat;
}
.oiplayer.inavailable div.player {
  display: none;
}
.oiplayer.inavailable p {
  width: 80%;
  text-align: center;
  font-size: 1.4em;
  margin: 0 auto;
  padding-top: 32%;
  font-weight: bold;
}
.oiplayerinfo {
  font-size: xx-small;
  padding: 2px;
  background-color: #efefef;
  color: black;
  z-index: 99;
  border-top: 1px solid #bbb;
  font-family: Monaco, "Courier New", monospaced;
  overflow: auto;
  position: absolute;
  top: 0;
  left: 0;
}
.oiplayerinfo.bottom {
  position: static;
  margin-top: 32px;
}
/* MSIE Java plugin detection, sigh :-( */
#clientcaps {
  behavior: url(#default#clientCaps);
  display: none;
}
/* ### example html ### */
body.oiplayer-example {
  font-size: 0.85em;
  font-family: Helvetica, sans-serif;
  background-color: #efefef;
  line-height: 1.4em;
}
body.oiplayer-example a:link {
  color: #c00;
}
body.oiplayer-example a:visited {
  color: #333;
}
body.oiplayer-example a:hover,
body.oiplayer-example a:active {
  color: #c00;
  text-decoration: underline;
}
body.oiplayer-example > div.main {
  width: 640px;
  margin: 0 auto;
  background-color: #fff;
  padding: 1px 1em;
}
body.oiplayer-example > div.main ol {
  padding-left: 20px;
}
body.oiplayer-example > div.main .license {
  font-size: 0.8em;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
